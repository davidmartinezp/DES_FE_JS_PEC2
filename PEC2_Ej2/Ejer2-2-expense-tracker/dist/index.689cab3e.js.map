{"mappings":"AAAA,MAAM;IACF,YAAY,KAAK,EAAE,IAAI,CAAE;QACvB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,IAAI,GAAG;QAEZ,IAAI,CAAC,IAAI;IACX;IAEA,OAAO;QACL,MAAM,OAAO,SAAS,cAAc,CAAC;QACrC,KAAK,gBAAgB,CAAC,UAAU,CAAA;YAC9B,EAAE,cAAc;YAChB,MAAM,OAAO,SAAS,cAAc,CAAC,QAAQ,KAAK,CAAC,IAAI;YACvD,MAAM,SAAS,WAAW,SAAS,cAAc,CAAC,UAAU,KAAK,CAAC,IAAI;YAEtE,IAAI,SAAS,MAAM,MAAM,SAAS;gBAChC,MAAM;gBACN;YACF;YAEA,MAAM,iBAAiB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM;YACvD,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;YAC9C,IAAI,CAAC,KAAK,CAAC,kBAAkB;YAC7B,IAAI,CAAC,gBAAgB;YACrB,IAAI,CAAC,cAAc;YAEnB,SAAS,cAAc,CAAC,QAAQ,KAAK,GAAG;YACxC,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG;QAC5C;QAEA,IAAI,CAAC,SAAS;IAChB;IAEA,YAAW;QACT,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY;QACxD,IAAI,CAAC,gBAAgB;QACrB,IAAI,CAAC,cAAc;IACrB;IAEA,mBAAoB;QAClB,MAAM,gBAAgB,KAAK,gBAAgB,CAAC;QAC5C,cAAc,OAAO,CAAC,CAAA;YACpB,OAAO,gBAAgB,CAAC,SAAS,IAAM,IAAI,CAAC,iBAAiB,CAAC;QAChE;IACF;IAEA,kBAAkB,MAAM,EAAE;QACxB,MAAM,gBAAgB,SAAS,OAAO,YAAY,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAC7B,IAAI,CAAC,SAAS;IAChB;IAEA,iBAAkB;QAChB,MAAM,cAAc,KAAK,gBAAgB,CAAC;QAC1C,YAAY,OAAO,CAAC,CAAA;YAClB,OAAO,gBAAgB,CAAC,SAAS,IAAM,IAAI,CAAC,eAAe,CAAC;QAC9D;IACF;IAEA,gBAAgB,MAAM,EAAE;QAEtB,MAAM,gBAAgB,SAAS,OAAO,YAAY,CAAC;QACnD,MAAM,cAAc,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA,cAAe,YAAY,EAAE,KAAK;QACnF,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAC7B,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;IAGhC;AAEF","sources":["controllers/expense.controller.js"],"sourcesContent":["class ExpenseController {\n    constructor(model, view) {\n      this.model = model;\n      this.view = view;\n  \n      this.init();\n    }\n  \n    init() {\n      const form = document.getElementById('form');\n      form.addEventListener('submit', e => {\n        e.preventDefault();\n        const text = document.getElementById('text').value.trim();\n        const amount = parseFloat(document.getElementById('amount').value.trim());\n  \n        if (text === '' || isNaN(amount)) {\n          alert('Please add a text and valid amount');\n          return;\n        }\n  \n        const newTransaction = this.model.addTransaction(text, amount);\n        this.view.displayTransaction(newTransaction);\n        this.view.updateValues(this.model.transactions);\n        this.model.updateLocalStorage();\n        this.updateDeleteBtns();\n        this.updateEditBtns();\n\n        document.getElementById('text').value = '';\n        document.getElementById('amount').value = '';\n      });\n  \n      this.initTrans();\n    }\n\n    initTrans(){\n      this.view.updateTransactionsView(this.model.transactions);\n      this.updateDeleteBtns();\n      this.updateEditBtns();\n    }\n\n    updateDeleteBtns () {\n      const deleteButtons = list.querySelectorAll('.delete-btn');\n      deleteButtons.forEach(button => {\n        button.addEventListener('click', () => this.deleteTransaction(button));\n      });\n    }\n\n    deleteTransaction(button) {\n      const transactionId = parseInt(button.getAttribute('data-id'));\n      this.model.removeTransaction(transactionId);\n      this.initTrans();\n    }\n\n    updateEditBtns () {\n      const editButtons = list.querySelectorAll('.edit-btn');\n      editButtons.forEach(button => {\n        button.addEventListener('click', () => this.editTransaction(button));\n      });\n    }\n\n    editTransaction(button) {\n      \n      const transactionId = parseInt(button.getAttribute('data-id'));\n      const transaction = this.model.transactions.find(transaction => transaction.id === transactionId);\n      console.log(transaction);\n      this.model.removeTransaction(transactionId);\n      this.initTrans();\n      this.view.setfocusTransaction(transaction);\n\n      \n    }\n\n  }\n\n  "],"names":[],"version":3,"file":"index.689cab3e.js.map","sourceRoot":"/__parcel_source_root/"}